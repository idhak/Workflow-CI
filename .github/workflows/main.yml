name: Workflow CI Kriteria 3

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
    - name: 1. Checkout Repository
      uses: actions/checkout@v4
      
    - name: 2. Setup Python Environment
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.9"
        activate-environment: "ml-project"
        auto-update-conda: true
        
    - name: 3. Install Dependencies
      run: |
        conda config --set channel_priority strict
        conda env update -n ml-project -f MLProject/conda.yaml
        conda list

    - name: 3.5 Verify Project Structure
      run: |
        echo "Project structure:"
        ls -lR MLProject/
        
    - name: 4. Validate Data Files
      working-directory: ./MLProject
      run: |
        echo "Verifying data directory structure..."
        # Create directory if it doesn't exist
        mkdir -p data_processing
        ls -l data_processing/
        # Check if required files exist (remove the exit 1 for testing)
        [ -f data_processing/X_train_processed.csv ] && echo "X_train found" || echo "X_train missing"
        [ -f data_processing/y_train.csv ] && echo "y_train found" || echo "y_train missing"
        
    - name: 5. Run Model Training
      env:
        MLFLOW_TRACKING_URI: "https://dagshub.com/idhak/SMSML_Idha_Kurniawati.mlflow"
        MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
        MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
      run: |
        python -c "import os; print('MLflow Tracking URI:', os.getenv('MLFLOW_TRACKING_URI'))"
        python MLProject/modelling.py
        
    - name: 6. Retrieve MLflow Run ID
      id: mlflow-run
      working-directory: ./MLProject
      run: |
        RUN_ID=$(mlflow runs list --experiment-name "random_forest_experiment_with_tuning" \
                --query "tags.mlflow.runName = 'Tuned_Random_Forest'" -o json | jq -r '.[0].info.run_id')
        echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT
        echo "Retrieved Run ID: $RUN_ID"
        
    - name: 7. Docker Hub Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: 8. Build and Push Docker Image
      if: steps.mlflow-run.outputs.run_id != ''
      run: |
        IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/workflow-ci-model:latest"
        mlflow models build-docker \
          --model-uri "runs:/${{ steps.mlflow-run.outputs.run_id }}/optimized_model" \
          --name "$IMAGE_NAME"
        docker push "$IMAGE_NAME"
        echo "Docker image pushed: $IMAGE_NAME"
        
    - name: 9. Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: model-artifacts
        path: |
          MLProject/data_processing/
          MLProject/model_metrics.json
