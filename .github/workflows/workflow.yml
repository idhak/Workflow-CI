name: ML Pipeline CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  train-and-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 1. Checkout Code
        uses: actions/checkout@v4

      # Langkah ini menyiapkan lingkungan Conda dengan benar
      - name: 2. Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          # Memberitahu action untuk secara otomatis menjalankan 'conda init'
          auto_activate_base: false
          # Mengaktifkan shell agar siap digunakan untuk perintah conda berikutnya
          activate-environment: ''
          # Menggunakan channel conda-forge yang seringkali memiliki paket lebih update
          channel-priority: 'flexible'
          
      - name: 3. Install Project Dependencies and Run MLflow
        # 'shell: bash -l {0}' sangat penting agar perintah 'conda' bisa ditemukan
        shell: bash -l {0}
        working-directory: ./MLProject
        env:
          MLFLOW_TRACKING_URI: https://dagshub.com/idhak/SMSML_Idha_Kurniawati.mlflow
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: |
          # Perintah ini menjalankan semuanya dalam satu langkah
          # MLflow akan:
          # 1. Membaca MLProject dan conda.yaml
          # 2. Membuat lingkungan conda baru sesuai resep di conda.yaml
          # 3. Mengaktifkan lingkungan tersebut
          # 4. Menjalankan 'python modelling.py' di dalamnya
          echo "Starting MLflow run with Conda..."
          mlflow run .
          echo "MLflow run finished."
          
      - name: 4. Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 5. Build and Push Docker Image
        shell: bash -l {0}
        run: |
          # Install jq untuk mem-parsing output JSON
          conda install -y jq

          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest"
          
          # Mengambil RUN_ID dari MLflow
          RUN_ID=$(mlflow runs list --experiment-name "rf_experiment_tuning" --query "tags.mlflow.runName = 'RF_Tuned_Run'" -o json | jq -r '.[0].info.run_id')
          
          if [ -z "$RUN_ID" ]; then
            echo "Error: Could not find the MLflow Run ID. Aborting build."
            exit 1
          fi

          echo "Found Run ID: $RUN_ID"
          
          # Membangun Docker image dari model
          mlflow models build-docker --model-uri "runs:/${RUN_ID}/rf_best_model" --name "$IMAGE_NAME"

          docker push "$IMAGE_NAME"
          echo "âœ… Docker image pushed to Docker Hub: $IMAGE_NAME"
          
      - name: 6. Log out from Docker Hub
        if: always()
        run: docker logout
