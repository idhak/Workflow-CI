name: ML Pipeline CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  train-and-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 1. Checkout Code
        uses: actions/checkout@v4

      - name: 2. Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: '3.9'
          channel-priority: 'flexible'
          
      - name: 3. Install MLflow CLI and Dependencies
        shell: bash -l {0}
        run: |
          echo "Installing mlflow, dagshub, jq, and curl..."
          pip install mlflow dagshub jq
          conda install -y curl
          echo "Installation complete."

        # LANGKAH DEBUGGING BARU & SANGAT PENTING
      - name: 4. Debug: Print Secrets and Test API Connection
        shell: bash -l {0}
        run: |
          echo "================== DEBUGGING INFO =================="
          echo "Verifying username from secrets..."
          # Perintah ini akan mencetak username untuk memastikan tidak ada typo atau spasi
          echo "Username used: '${{ secrets.MLFLOW_TRACKING_USERNAME }}'"
          echo "----------------------------------------------------"
          echo "Testing direct API connection to DagsHub with curl..."
          # Perintah curl ini mencoba mengambil info user dari API DagsHub
          # -v (verbose) akan menampilkan detail proses koneksi TLS/SSL
          curl -v -H "Authorization: token ${{ secrets.MLFLOW_TRACKING_PASSWORD }}" https://dagshub.com/api/v1/user
          echo "================ END DEBUGGING INFO ================"

      - name: 5. Run MLflow Project
        # 'continue-on-error' agar workflow tidak berhenti jika langkah ini gagal
        # sehingga kita tetap bisa melihat hasil debug
        continue-on-error: true
        shell: bash -l {0}
        working-directory: ./MLProject
        env:
          MLFLOW_TRACKING_URI: https://dagshub.com/idhak/SMSML_Idha_Kurniawati.mlflow
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: |
          echo "Starting MLflow run..."
          # Script modelling.py masih menggunakan #dagshub.init(...)
          mlflow run .
          echo "MLflow run finished."
          
      # Langkah-langkah Docker tetap sama
      - name: 6. Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: 7. Build and Push Docker Image
        shell: bash -l {0}
        run: |
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest"
          
          echo "Searching for Run ID..."
          RUN_ID=$(mlflow runs list --experiment-name "rf_experiment_tuning" --query "tags.mlflow.runName = 'RF_Tuned_Run'" -o json | jq -r '.[0].info.run_id')
          
          if [ -z "$RUN_ID" ]; then
            echo "Error: Could not find the MLflow Run ID. Aborting build."
            exit 1
          fi

          echo "Found Run ID: $RUN_ID"
          
          echo "Building Docker image from model..."
          mlflow models build-docker --model-uri "runs:/${RUN_ID}/rf_best_model" --name "$IMAGE_NAME"

          echo "Pushing Docker image to Docker Hub..."
          docker push "$IMAGE_NAME"
          echo "âœ… Docker image pushed to Docker Hub: $IMAGE_NAME"
          
      - name: 8. Log out from Docker Hub
        if: always()
        run: docker logout
