name: ML Pipeline CI/CD

on:
  push:
    branches:
      - main  # Jalankan setiap kali ada push ke branch main

jobs:
  train-and-build:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./MLProject # Semua perintah dijalankan dari dalam folder MLProject

    steps:
      - name: 1. Checkout Code
        uses: actions/checkout@v3

      - name: 2. Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: 3. Install MLflow and DagsHub
        run: pip install mlflow dagshub

      - name: 4. Configure DagsHub/MLflow Credentials
        env:
          MLFLOW_TRACKING_URI: https://dagshub.com/idhak/SMSML_Idha_Kurniawati.mlflow
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: |
          echo "MLflow tracking URI is set." 
          # Perintah `mlflow run` di bawah akan otomatis menggunakan env vars ini.

      - name: 5. Run MLflow Project to Train Model
        id: train_run
        env:
          MLFLOW_TRACKING_URI: https://dagshub.com/idhak/SMSML_Idha_Kurniawati.mlflow
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: |
          # Menjalankan proyek MLflow. Artefak (model, gambar, dll.) akan di-log ke DagsHub.
          mlflow run .
          
      - name: 6. Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 7. Build and Push Docker Image
        run: |
          # Membuat nama image: username/nama-repo:versi
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest"

          # Menggunakan MLflow untuk membangun Docker image dari proyek yang sama
          mlflow models build-docker --model-uri "runs:/$(mlflow runs list --query "tags.mlflow.runName = 'RF_Tuned_Run'" -o json | jq -r '.[0].info.run_id')/rf_best_model" --name "$IMAGE_NAME"

          # Mendorong image ke Docker Hub
          docker push "$IMAGE_NAME"
          echo "âœ… Docker image pushed to Docker Hub: $IMAGE_NAME"
          
      - name: 8. Log out from Docker Hub
        if: always()
        run: docker logout
